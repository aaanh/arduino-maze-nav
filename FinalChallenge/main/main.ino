 // Libraries:
#include <Arduino.h> // main library header for arduino boards
#include "DCMDriverL298.h" // dual H-bridge motor driver
#include "NewPing.h" // this library is for ultrasonic
#include "Wire.h" // this library is for arduino coms
#include <stdio.h> // printf("...");
#include "LED.h" // self-explanatory

// Pin definitions
// Just blantantly copied from auto-generated code in /Firmware
#define DCMOTORDRIVERL298_PIN_INT1	8
#define DCMOTORDRIVERL298_PIN_ENB	3
#define DCMOTORDRIVERL298_PIN_INT2	9
#define DCMOTORDRIVERL298_PIN_ENA	2
#define DCMOTORDRIVERL298_PIN_INT3	10
#define DCMOTORDRIVERL298_PIN_INT4	11
#define HCSR04_1_PIN_TRIG	13
#define HCSR04_1_PIN_ECHO	12
#define HCSR04_2_PIN_TRIG	15
#define HCSR04_2_PIN_ECHO	14
#define LEDB_PIN_VIN	4
#define LEDG_PIN_VIN	5
#define LEDR_PIN_VIN	6
#define LEDY_PIN_VIN	7


// Object init and class assignment

/*
  Dev Notes - Ultrasonic Sensors:
  - NewPing objects (generated by circuito.io) takes in 2 parameters: trigger pin and echo pin; then output according to called attributes.
  - For example: get the distance from the sensor: `sensorname.ping_cm()`;
*/

NewPing hcsr04_1(HCSR04_1_PIN_TRIG, HCSR04_1_PIN_ECHO);
NewPing hcsr04_2(HCSR04_2_PIN_TRIG, HCSR04_2_PIN_ECHO);

/*
  Dev Notes - Motor Driver
  - Creating new objects with existing class attributes in imported libraries.
  - Mostly DC motor driver var inits.
*/

DCMDriverL298 dcMotorDriverL298(DCMOTORDRIVERL298_PIN_ENA, DCMOTORDRIVERL298_PIN_INT1, DCMOTORDRIVERL298_PIN_INT2, DCMOTORDRIVERL298_PIN_ENB, DCMOTORDRIVERL298_PIN_INT3, DCMOTORDRIVERL298_PIN_INT4);

/*
  Dev Notes - LED Indicators
*/

LED ledB(LEDB_PIN_VIN); // Blue - turning right
LED ledG(LEDG_PIN_VIN); // Green - moving forward
LED ledR(LEDR_PIN_VIN); // Red - turning left
LED ledY(LEDY_PIN_VIN);

// Setup
void setup() {

  // Debugging
  Serial.begin(9600);
  while (!Serial);

  Serial.println("now starting drive program...");
  delay(100);
}

void loop() {
  // Designated: MotorA - right, MotorB - left
  // Designated: hcsr04_1 - sensor front, hcsr04_2 - sensor left
  if (hcsr04_1.ping_cm() >= 25) {
    // LED Indicators
    ledR.off(); 
    ledG.on(); 
    ledB.off(); 
    ledY.off(); 
    dcMotorDriverL298.setMotorA(200, 1);
    dcMotorDriverL298.setMotorB(200, 1);
  }
  else {
    if (hcsr04_2.ping_cm() <= 10) { // left-mounted sensor, to turn right, left wheel needs to go forward.
      dcMotorDriverL298.setMotorB(200, 1);
      dcMotorDriverL298.setMotorA(10, 0); // this is to add a bit resistance in right wheel so the turn is more sharp
      // LED Indicators
      ledR.on();
      ledG.off();
      ledB.off();
      ledY.off();
      delay(100); // theoretical time it takes to turn.
      
    }
    else {
      dcMotorDriverL298.setMotorA(200, 1);
      dcMotorDriverL298.setMotorB(10, 0); // same thing as with turning right
      // LED Indicators
      ledR.off();
      ledG.off();
      ledB.on();
      ledY.off();
      delay(100);
    };
  };
}
